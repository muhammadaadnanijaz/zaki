plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader -> localProperties.load(reader) }
}

def flutterVersionCode = (localProperties.getProperty('flutter.versionCode') ?: '1')
def flutterVersionName = (localProperties.getProperty('flutter.versionName') ?: '1.0')

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.zakipay.teencard"
    compileSdk 36

    defaultConfig {
        applicationId "com.zakipay.teencard"
        minSdkVersion 24
        targetSdkVersion 36
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        // Needed by flutter_local_notifications and other libs using java.time, etc.
        // coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    // New lint block (replaces deprecated lintOptions)
    lint {
        abortOnError false
        checkReleaseBuilds false
        disable += ['InvalidPackage', 'Instantiatable']
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

flutter {
    source '../..'
}

dependencies {
    // Desugaring (v2.1.4 required by flutter_local_notifications)
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:2.1.4"
    // implementation "org.jetbrains.kotlin:kotlin-stdlib:2.0.21"


    // Your existing deps
    implementation 'io.card:android-sdk:5.+'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.70'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'
    implementation 'org.jetbrains:annotations:16.0.2'
    // implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    // implementation "org.jetbrains.kotlin:kotlin-stdlib:2.1.10"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:2.1.0"
    implementation "androidx.appcompat:appcompat:1.7.0"
    implementation "com.google.android.material:material:1.12.0"




    // Firebase BOM (keep or bump as you wish)
    implementation platform('com.google.firebase:firebase-bom:32.1.1')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-firestore'

    // DO NOT include explicit kotlin-stdlib with a version here â€”
    // the Kotlin plugin supplies the correct stdlib to avoid version conflicts.
}
